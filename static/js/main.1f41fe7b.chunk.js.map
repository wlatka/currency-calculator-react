{"version":3,"sources":["App/styled.js","App/Clock/styled.js","App/Clock/index.js","App/Clock/useCurrentData.js","App/App.js","reportWebVitals.js","index.js"],"names":["StyledForm","styled","form","Title","h1","Fieldset","fieldset","Legend","legend","Span","span","Input","input","required","css","Button","button","Div","div","formatDate","date","toLocaleString","undefined","weekday","hour","minute","second","day","month","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","useCurrentDate","App","name","setName","pln","usd","gbp","type","min","onChange","target","value","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEaA,EAAaC,IAAOC,KAAV,qDAIVC,EAAQF,IAAOG,GAAV,6DAILC,EAAWJ,IAAOK,SAAV,qDAIRC,EAASN,IAAOO,OAAV,4HAONC,EAAOR,IAAOS,KAAV,2EAKJC,EAAQV,IAAOW,MAAV,wJAMZ,qBAAGC,UAA2BC,YAAJ,8HAMnBC,EAASd,IAAOe,OAAV,uOCpCNC,EAAMhB,IAAOiB,IAAV,6H,OCCVC,EAAa,SAACC,GAAD,OAAUA,EAAKC,oBAAeC,EAAW,CACxDC,QAAS,OACTC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,IAAK,UACLC,MAAO,UAeIC,EAZM,WACjB,IAAMT,ECXoB,WAC1B,MAAwBU,mBAAS,IAAIC,MAArC,mBAAOX,EAAP,KAAaY,EAAb,KAYA,OAVAC,qBAAU,WACN,IAAMC,EAAaC,aAAY,WAC3BH,EAAQ,IAAID,QACb,KAEH,OAAO,WACHK,cAAcF,MAEnB,IAEId,EDFMiB,GAEb,OACI,eAACpB,EAAD,0BAEK,IACAE,EAAWC,OEuCTkB,MAtDf,WAEI,MAAwBR,mBAAS,IAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAEMC,EAAM,OAASF,EACfG,EAAM,KAAOH,EACbI,EAAM,IAAOJ,EAMnB,OACI,qCACI,cAAC,EAAD,IACA,eAACvC,EAAD,WACI,cAACG,EAAD,8BACA,eAACE,EAAD,WACI,cAACE,EAAD,6CACA,4BACI,kCACI,cAACE,EAAD,sCACA,cAACE,EAAD,CACIE,UAAQ,EACR+B,KAAK,SACLC,IAAI,IACJC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBP,EAAQO,EAAOC,QACzCA,MAAOT,SAGnB,4BACI,0CACS,mCAASE,EAAIQ,QAAQ,GAArB,mBAGb,4BACI,0CACS,mCAASP,EAAIO,QAAQ,GAArB,aAGb,4BACI,0CACS,mCAASN,EAAIM,QAAQ,GAArB,mBAIjB,4BACI,cAAClC,EAAD,CAAQ6B,KAvCL,kBACfL,GAsCY,wCCvCLW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1f41fe7b.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const StyledForm = styled.form`\r\n    padding: 10px 10px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n    color: hsl(308, 100%, 32%);\r\n`;\r\n\r\nexport const Fieldset = styled.fieldset`\r\n    border-radius: 5px;\r\n`;\r\n\r\nexport const Legend = styled.legend`\r\n    border-radius: 5px;\r\n    background-color: #640057;\r\n    color: white;\r\n    padding: 10px;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n    display: inline-block;\r\n    width: 200px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n    border: 2px solid #ccc;\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    max-width: 300px;\r\n    padding: 10px;\r\n    ${({ required }) => required && css`\r\n        background-color: hsl(308, 100%, 94%);\r\n        border-color: rgb(136, 136, 136);\r\n    `}\r\n`;\r\n\r\nexport const Button = styled.button`\r\n    width: 100%;\r\n    border: none;\r\n    border-radius: 5px;\r\n    padding: 10px;\r\n    color: white;\r\n    background-color: #640057;\r\n    &:hover {\r\n        background-color: hsl(308, 100%, 32%);\r\n    }\r\n`;","import styled from \"styled-components\";\r\n\r\nexport const Div = styled.div`\r\n    text-align: right;\r\n    font-family: monospace;\r\n    color: #640057;\r\n    margin-top: 15px;\r\n`;","import { useCurrentDate } from \"./useCurrentData\";\r\nimport { Div } from \"./styled\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n});\r\n\r\nexport const Clock = () => {\r\n    const date = useCurrentDate();\r\n\r\n    return (\r\n        <Div>\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </Div>\r\n    );\r\n};\r\n\r\nexport default Clock;","import { useState, useEffect } from \"react\";\r\n\r\nexport const useCurrentDate = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        }\r\n    }, []);\r\n\r\n    return date;\r\n};","import { useState } from \"react\";\r\nimport { StyledForm, Title, Fieldset, Legend, Span, Input, Button } from \"./styled\";\r\nimport Clock from \"./Clock\";\r\n\r\nfunction App() {\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const pln = 4.5577 * name;\r\n    const usd = 1.18 * name;\r\n    const gbp = 0.86 * name;\r\n\r\n    const removeName = () => (\r\n        name\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <Clock />\r\n            <StyledForm>\r\n                <Title>Konwerter walut</Title>\r\n                <Fieldset>\r\n                    <Legend>Przelicz z EUR na inne waluty.</Legend>\r\n                    <p>\r\n                        <label>\r\n                            <Span>Wpisz kwotę EUR *:</Span>\r\n                            <Input\r\n                                required\r\n                                type=\"number\"\r\n                                min=\"1\"\r\n                                onChange={({ target }) => setName(target.value)}\r\n                                value={name} />\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            PLN: <strong>{pln.toFixed(2)} zł</strong>\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            USD: <strong>{usd.toFixed(2)} $</strong>\r\n                        </label>\r\n                    </p>\r\n                    <p>\r\n                        <label>\r\n                            GBP: <strong>{gbp.toFixed(2)} £</strong>\r\n                        </label>\r\n                    </p>\r\n                </Fieldset>\r\n                <p>\r\n                    <Button type={removeName}>Wyczyść</Button>\r\n                </p>\r\n            </StyledForm>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}