{"version":3,"sources":["App/Clock/index.js","App/App.js","reportWebVitals.js","index.js"],"names":["formatDate","date","toLocaleString","undefined","weekday","hour","minute","second","day","month","Clock","useState","Date","setDate","useEffect","intervalId","setInterval","clearInterval","className","App","name","setName","pln","usd","gbp","required","type","min","onChange","target","value","toFixed","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAGMA,EAAa,SAACC,GAAD,OAAUA,EAAKC,oBAAeC,EAAW,CACxDC,QAAS,OACTC,KAAM,UACNC,OAAQ,UACRC,OAAQ,UACRC,IAAK,UACLC,MAAO,UAyBIC,EAtBD,WACV,MAAwBC,mBAAS,IAAIC,MAArC,mBAAOX,EAAP,KAAaY,EAAb,KAYA,OAVAC,qBAAU,WACN,IAAMC,EAAaC,aAAY,WAC3BH,EAAQ,IAAID,QACb,KAEH,OAAO,WACHK,cAAcF,MAEnB,IAGC,sBAAKG,UAAU,QAAf,yBAEK,IACAlB,EAAWC,OCuCTkB,MA/Df,WAEI,MAAwBR,mBAAS,IAAjC,mBAAOS,EAAP,KAAaC,EAAb,KAEMC,EAAM,OAASF,EACfG,EAAM,IAAOH,EACbI,EAAM,IAAOJ,EAOnB,OAKI,uBAAMF,UAAU,OAAhB,UACI,oBAAIA,UAAU,cAAd,6BACA,2BAAUA,UAAU,iBAApB,UACI,wBAAQA,UAAU,eAAlB,4CACA,4BACI,kCACI,sBAAMA,UAAU,kBAAhB,qCACA,uBACIO,UAAQ,EACRP,UAAU,cACVQ,KAAK,SACLC,IAAI,IACJC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBR,EAAQQ,EAAOC,QACzCA,MAAOV,SAGnB,4BACI,0CACS,mCAASE,EAAIS,QAAQ,GAArB,mBAGb,4BACI,0CACS,mCAASR,EAAIQ,QAAQ,GAArB,aAGb,4BACI,0CACS,mCAASP,EAAIO,QAAQ,GAArB,mBAIjB,4BAAG,cAAC,EAAD,MACH,4BACI,wBAAQb,UAAU,eAAeQ,KA5C1B,kBACfN,GA2CQ,qCC7CDY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.943da1d3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst formatDate = (date) => date.toLocaleString(undefined, {\r\n    weekday: \"long\",\r\n    hour: \"2-digit\",\r\n    minute: \"2-digit\",\r\n    second: \"2-digit\",\r\n    day: \"numeric\",\r\n    month: \"long\"\r\n});\r\n\r\nconst Clock = () => {\r\n    const [date, setDate] = useState(new Date());\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {\r\n            setDate(new Date());\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(intervalId);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"clock\">\r\n            Dzisiaj jest\r\n            {\" \"}\r\n            {formatDate(date)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;","import { useState } from \"react\";\r\nimport \"./style.css\";\r\nimport Clock from \"./Clock\";\r\n\r\n\r\nfunction App() {\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const pln = 4.5577 * name;\r\n    const usd = 0.83 * name;\r\n    const gbp = 0.87 * name;\r\n\r\n    const removeName = () => (\r\n        name\r\n    );\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n\r\n        <form className=\"form\">\r\n            <h1 className=\"form__title\">Konwerter walut</h1>\r\n            <fieldset className=\"form__fieldset\">\r\n                <legend className=\"form__legent\">Przelicz z EUR na inne waluty.</legend>\r\n                <p>\r\n                    <label>\r\n                        <span className=\"form__innerText\">Wpisz kwotę EUR *:</span>\r\n                        <input\r\n                            required\r\n                            className=\"form__field\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            onChange={({ target }) => setName(target.value)}\r\n                            value={name} />\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        PLN: <strong>{pln.toFixed(2)} zł</strong>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        USD: <strong>{usd.toFixed(2)} $</strong>\r\n                    </label>\r\n                </p>\r\n                <p>\r\n                    <label>\r\n                        GBP: <strong>{gbp.toFixed(2)} £</strong>\r\n                    </label>\r\n                </p>\r\n            </fieldset>\r\n            <p><Clock /></p>\r\n            <p>\r\n                <button className=\"form__button\" type={removeName}>Wyczyść</button>\r\n            </p>\r\n        </form>\r\n\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}